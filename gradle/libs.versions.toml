[versions]

# SDK
minSdk = "26"
compileSdk = "34"
targetSdk = "34"

# Gradle plugins
androidGradlePlugin = "8.2.2"
crashlyticsGradlePlugin = "2.9.9"
appdistributionGradlePlugin = "4.2.0"
gms = "4.4.1"
skie = "0.6.1"
detekt = "1.23.5"
detektCompose = "0.3.12"
safeargs = "2.7.7"

# AndroidX
androidCore = "1.12.0"
lifecycle = "2.7.0"

# Kotlin
kotlin = "1.9.23"
coroutines = "1.8.0"
kotlin-immutableCollections = "0.3.7"

# KSP
ksp = "1.9.23-1.0.20"

# Network
ktor = "2.3.8"
okhttp = "4.11.0"
serialization = "1.6.3"

# Persistance
datastore = "1.1.0-alpha05"
sqlDelight = "2.0.1"

# Compose
composeBom = "2024.02.02"
composeCompiler = "1.5.11"
composeActivity = "1.8.2"
composeViewmodel = "2.7.0"
composeCoil = "2.5.0"
composeDestinations = "1.10.2"
composeNavigation = "2.7.7"
composeRuntime = "1.6.3"

# Koin
koin = "3.5.3"

# Testing
junit = "4.13.2"
junitExt = "1.1.5"
mockk = "1.13.8"
testArchCore = "2.2.0"
testRunner = "1.5.2"
testRules = "1.5.0"
turbine = "1.0.0"
kotest = "5.8.0"

# Firebase
firebaseBom = "32.8.0"

# Desugaring
desugaring = "2.0.4"

# Other
kotlinDatetime = "0.6.0-RC.2"
espresso-core = "3.5.1"
appcompat = "1.6.1"
material = "1.11.0"
timber = "5.0.1"

[libraries]

# Build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
firebase-crashlytics-gradlePlugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "crashlyticsGradlePlugin" }
firebase-appdistribution-gradlePlugin = { module = "com.google.firebase:firebase-appdistribution-gradle", version.ref = "appdistributionGradlePlugin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
sqldelight-gradlePlugin = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
android-gms = { module = "com.google.gms:google-services", version.ref = "gms" }

# Lint
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detektCompose" }

# AndroidX
androidCore = { module = "androidx.core:core-ktx", version.ref = "androidCore" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
compose-material = { module = "androidx.compose.material3:material3" }
compose-animation = { module = "androidx.compose.animation:animation" }
compose-animationGraphics = { module = "androidx.compose.animation:animation-graphics" }
compose-foundation = { module = "androidx.compose.foundation:foundation-layout" }
compose-uiTooling = { module = "androidx.compose.ui:ui-tooling" }
compose-uiUtil = { module = "androidx.compose.ui:ui-util" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewmodel" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "composeRuntime" }
compose-coil = { module = "io.coil-kt:coil-compose", version.ref = "composeCoil" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-navigation = { module = "io.insert-koin:koin-androidx-navigation", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-multiplatform = { module = "io.insert-koin:koin-core", version.ref = "koin" }

# Compose Navigation
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
compose-navigationRuntime = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "composeNavigation" }
compose-destinations = { module = "io.github.raamcosta.compose-destinations:core", version.ref = "composeDestinations" }
compose-destinations-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "composeDestinations" }

# Lifecycle
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# Kotlin
kotlin-core = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinDatetime" }
kotlin-immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-immutableCollections" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-test = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }


# Persistance
datastore = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
sqldelight-common = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-ios = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }

# Testing
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockk" }
testArchCore = { module = "androidx.arch.core:core-testing", version.ref = "testArchCore" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunner" }
testRules = { module = "androidx.test:rules", version.ref = "testRules" }
junitExt = { module = "androidx.test.ext:junit", version.ref = "junitExt" }
junit = { module = "junit:junit", version.ref = "junit" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
kotest-property-testing = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }

# Desugaring
desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugaring" }

# Timber
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-tools = { id = "com.android.tools.build.gradle", version.ref = "androidGradlePlugin" }
android-gms = { id = "com.google.gms.google-services", version.ref = "gms" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }

skie = { id = "co.touchlab.skie", version.ref = "skie" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsGradlePlugin" }
firebase-appdistribution = { id = "com.google.firebase.appdistribution", version.ref = "appdistributionGradlePlugin" }
safeargs = { id = "androidx.navigation.safeargs.kotlin", version.ref = "safeargs" }

# Application defined plugins
news-android-application = { id = "news.android.application", version = "unspecified" }
news-android-application-compose = { id = "news.android.application.compose", version = "unspecified" }
news-android-library = { id = "news.android.library", version = "unspecified" }
news-android-library-compose = { id = "news.android.library.compose", version = "unspecified" }
news-android-test = { id = "news.android.test", version = "unspecified" }
news-android-compose-navigation = { id = "news.android.navigation", version = "unspecified" }
news-android-firebase = { id = "news.android.firebase", version = "unspecified" }
news-kotlin-multiplatform-library = { id = "news.kotlin.multiplatform.library", version = "unspecified" }
news-kotlin-multiplatform-test = { id = "news.kotlin.multiplatform.test", version = "unspecified" }
news-database-sqldelight = { id = "news.database.sqldelight", version = "unspecified" }

[bundles]
kotlin = [
    "kotlin-core",
    "kotlin-coroutinesCore",
    "kotlin-coroutinesAndroid",
    "kotlin-coroutinesTest"
]

compose = [
    "compose-activity",
    "compose-material",
    "compose-animation",
    "compose-animationGraphics",
    "compose-coil",
    "compose-foundation",
    "compose-lifecycle",
    "compose-viewmodel",
    "compose-uiTooling",
    "compose-uiUtil",
    "compose-ui",
    "kotlin-immutable-collections"
]

koin = [
    "koin-android",
    "koin-compose",
    "koin-multiplatform",
    "koin-navigation"
]

ktor-multiplatform = [
    "ktor-core",
    "ktor-negotiation",
    "ktor-serialization",
    "ktor-auth",
    "ktor-logging",
    "ktor-test",
    "ktor-cio",
]

kmm-unit-testing = [
    "kotest-assertions",
    "kotest-engine",
    "kotlin-coroutinesTest",
    "turbine",
    "kotest-runner",
    "koin-multiplatform",
]

unitTesting = [
    "kotest-assertions",
    "kotest-engine",
    "kotlin-coroutinesTest",
    "turbine",
    "kotest-runner",
]

navigation = [
    "compose-navigation",
    "compose-destinations",
    "compose-navigationRuntime"
]

navigation-ksp = [
    "compose-destinations-ksp"
]
